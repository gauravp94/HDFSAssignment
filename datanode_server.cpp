/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */
#include <string>
#include <fstream>
#include <streambuf>
#include "datanode.h"
using namespace std;

int block_size = 32*1024*1024;
string datanode_report = "datanode_report.txt";

char **
readblock_1_svc(char **argp, struct svc_req *rqstp)
{
	static char * result;

	ReadBlockRequest r;
	int blockID=-1;
	if(r.has_blockNumber())
	{
		blockID=r.blockNumber();
	}
	else
	{
		cout<<"No block ID specified"<<endl;
	}
	string filename = to_string(blockID);
	ifstream t(filename);
	string str;

	t.seekg(0, std::ios::end);   
	str.reserve(t.tellg());
	t.seekg(0, std::ios::beg);

	str.assign((std::istreambuf_iterator<char>(t)),
	            std::istreambuf_iterator<char>());

	ReadBlockResponse op;
	op.set_status(1);
	char * tmp = str.c_str();
	
	op.add_data(tmp);//repeated bytes is string ?
	/*
	 * insert server code here
	 */
	string t;
	if (!op.SerializeToString(t)) {
      cerr << "Failed to give ReadBlockResponse."<< endl;
      return -1;
    }
    result = t.c_str();
	return &result;
}

char **
writeblock_1_svc(char **argp, struct svc_req *rqstp)
{
	static char * result;

	WriteBlockRequest w;
	BlockLocations binfo = w.blockInfo();
	int blockNo = binfo.blockNumber();
	string data;
	int data_size = w.data_size();
	for(int i=0;i<data_size;i++)
	{
		data += w.data(i);
	}

	string filename = to_string(blockNo);
	ofstream out(filename);
	out<<data;
	out.close();
	
	ofstream rep;
	rep.open(datanode_report, ios_base::app);
	rep<<filename+"\n";
	rep.close();

	WriteBlockResponse w;
	w.set_status(1);

	/*
	 * insert server code here
	 */
	string t;
	if (!w.SerializeToString(t)) {
      cerr << "Failed to give WriteBlockResponse."<< endl;
      return -1;
    }
    result = t.c_str();
	return &result;
}

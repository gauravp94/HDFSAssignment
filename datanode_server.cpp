/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */
#include <string>
#include <fstream>
#include <streambuf>
#include "datanode.h"
using namespace std;

int block_size = 32*1024*1024;
string datanode_report = "datanode_report.txt";

char **
readblock_1_svc(char **argp, struct svc_req *rqstp)
{
	static char * result;

	ReadBlockRequest r;
	int blockID=-1;
	if(r.blockNumber!=NULL)
	{
		blockID=r.blockNumber;
	}
	else
	{
		cout<<"No block ID specified"<<endl;
	}
	string filename = to_string(blockID);
	ifstream t(filename);
	string str;

	t.seekg(0, std::ios::end);   
	str.reserve(t.tellg());
	t.seekg(0, std::ios::beg);

	str.assign((std::istreambuf_iterator<char>(t)),
	            std::istreambuf_iterator<char>());

	result = str.c_str();
	/*
	 * insert server code here
	 */
	return &result;
}

char **
writeblock_1_svc(char **argp, struct svc_req *rqstp)
{
	static char * result;

	WriteBlockRequest w;
	int blockNo = w.blockInfo.blockNumber;
	string data = w.data;

	string filename = to_string(blockNo);
	ofstream out(filename);
	out<<data;
	out.close();
	
	ofstream rep;
	rep.open(datanode_report, ios_base::app);
	rep<<filename+"\n";
	rep.close();

	//WriteBlockResponse w = new WriteBlockResponse();
	string output= "1";
	result = output.c_str();
	/*
	 * insert server code here
	 */
	return &result;
}
